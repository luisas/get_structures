/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {


    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/SUMMARIES/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: DBSHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/SUMMARIES/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    withName: CALCULATE_SEQSTATS {

        storeDir = { "${params.outdir}/SUMMARIES/input_sequences/seqstats" }
    
    }

    withName: TCOFFEE_SEQREFORMAT_SIM {

        storeDir = { "${params.outdir}/SUMMARIES/input_sequences/similarity" }
    
    }

    withName: MERGE_STATS {

        storeDir = {  "${params.outdir}/SUMMARIES/input_sequences" }

    }

   withName: MMSEQS_CREATEDB{

        storeDir =  { "${params.outdir}/SEARCH/mmseqs/dbs" }
    
    }

    withName: MMSEQS_SEARCH{

        storeDir = { "${params.outdir}/SEARCH/mmseqs/id_${params.mmseqs_min_id}_cov_${params.mmseqs_min_cov}_covtype_${params.mmseqs_cov_type}_kmermatching_${params.mmseqs_exact_kmer_matching}/search" }
        
        ext.args   = {
                [
                    params.mmseqs_min_id ? "--min-seq-id ${params.mmseqs_min_id}" : '',
                    params.mmseqs_min_cov ? "-c ${params.mmseqs_min_cov} " : '',
                    params.mmseqs_cov_type ? "--cov-mode ${params.mmseqs_cov_type} " : '',
                    params.mmseqs_exact_kmer_matching ? "--exact-kmer-matching ${params.mmseqs_exact_kmer_matching} " : ''
                ].join(' ').trim()
            }

        ext.prefix = { "RESULTDB${meta.id}" }

    }


    withName: MMSEQS_EASYSEARCH{

        storeDir = { "${params.outdir}/SEARCH/mmseqs_easy/id_${params.mmseqs_min_id}_cov_${params.mmseqs_min_cov}_covtype_${params.mmseqs_cov_type}_kmermatching_${params.mmseqs_exact_kmer_matching}/search" }
        
        ext.args   = {
                [
                    params.mmseqs_min_id ? "--min-seq-id ${params.mmseqs_min_id}" : '',
                    params.mmseqs_min_cov ? "-c ${params.mmseqs_min_cov} " : '',
                    params.mmseqs_cov_type ? "--cov-mode ${params.mmseqs_cov_type} " : '',
                    params.mmseqs_exact_kmer_matching ? "--exact-kmer-matching ${params.mmseqs_exact_kmer_matching} " : '',
                    params.mmseqs_format_output ? "--format-output ${params.mmseqs_format_output}" : ''
                ].join(' ').trim()
            }

        ext.prefix = { "${meta.id}" }

    }

    withName: MMSEQS_CREATEALIS{

        storeDir = { "${params.outdir}/SEARCH/mmseqs/id_${params.mmseqs_min_id}_cov_${params.mmseqs_min_cov}_covtype_${params.mmseqs_cov_type}_kmermatching_${params.mmseqs_exact_kmer_matching}/formatted_search_output"}
        ext.args   = {
                [
                    params.mmseqs_format_output ? "--format-output ${params.mmseqs_format_output}" : ''
                ].join(' ').trim()
            }
    }



    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: FILTER_HITS{
        
        storeDir =  { "${params.outdir}/SEARCH/filter/${params.min_id}_${params.min_cov}" }


        ext.args   = {
                        [
                            "${params.min_id}",
                            "${params.min_cov}", 
                            params.mmseqs_format_output ? "${params.mmseqs_format_output}" : ''
                        ].join(' ').trim()
                    }
    }

    withName: DOWNLOAD_STRUCTURE_AFDB{
        ext.args   = {
                        [
                            params.mmseqs_format_output ? "${params.mmseqs_format_output}" : ''
                        ].join(' ').trim()
                    }
        publishDir = [
            path: { "${params.outdir}/FETCHED_STRUCTURES/${params.min_id}_${params.min_cov}/${meta.id}" },
            mode: params.publish_dir_mode
        ]
        
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/SUMMARIES/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: MULTIQC {

        publishDir = [
            path: { "${params.outdir}/SUMMARIES/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

    }



}
